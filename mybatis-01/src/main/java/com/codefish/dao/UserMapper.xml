<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--namespace绑定一个指定的Dao/Mapper接口-->
<mapper namespace="com.codefish.dao.UserMapper">
    <!--结果集映射-->
    <resultMap id="UserMap" type="hello">
        <!--property：实体类属性名 column：数据库字段名-->
<!--        <id property="id" column="id"/>-->
<!--        <id property="name" column="name"/>-->
        <id property="pwd" column="password"/>
    </resultMap>
    
    
    <!--查询语句-->
    <select id="getUserList" resultType="hello">
        select * from mybatis.user
    </select>

    <!--分页查询-->
    <select id="getUserByLimit" parameterType="map" resultMap="UserMap">
        select * from mybatis.user limit #{startIndex},#{pageSize}
    </select>

    <select id="getUserLike" resultType="com.codefish.pojo.User">
        select * from mybatis.user where name like "%"#{name}"%"
    </select>



    <insert id="addUser" parameterType="com.codefish.pojo.User">
        insert into mybatis.user (id,name,password) values (#{id},#{name},#{pwd})
    </insert>

    <insert id="addUser2" parameterType="map">
        insert into mybatis.user (id,name,password) values (#{userid},#{username},#{userpwd})
    </insert>

    <update id="updateUser" parameterType="com.codefish.pojo.User">
        update mybatis.user
        set name = #{name}, password = #{password}
        where id = #{id};
    </update>

    <delete id="deleteUser" parameterType="int">
        delete from mybatis.user where id = #{id}
    </delete>

</mapper>